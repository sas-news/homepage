---
import { Icon } from "astro-icon/components";

const skillGroups = [
    {
        category: "プログラミング言語・言語",
        skills: [
            { name: "HTML", icon: "skill-icons:html", level: 5 },
            { name: "CSS", icon: "skill-icons:css", level: 4 },
            { name: "JavaScript", icon: "skill-icons:javascript", level: 4 },
            { name: "TypeScript", icon: "skill-icons:typescript", level: 3 },
            { name: "Python", icon: "skill-icons:python-light", level: 3 },
            { name: "Java", icon: "skill-icons:java-light", level: 2 },
        ],
    },
    {
        category: "ライブラリ・フレームワーク",
        skills: [
            { name: "Astro", icon: "skill-icons:astro", level: 5 },
            { name: "React", icon: "skill-icons:react-dark", level: 5 },
            { name: "Next.js", icon: "skill-icons:nextjs-light", level: 4 },
            { name: "Vite", icon: "skill-icons:vite-light", level: 4 },
            { name: "Material UI", icon: "skill-icons:materialui-light", level: 2 },
            { name: "Tailwind CSS", icon: "skill-icons:tailwindcss-light", level: 1 },
        ],
    },
    {
        category: "ツール",
        skills: [
            { name: "VSCode", icon: "skill-icons:vscode-light", level: 5 },
            { name: "Git", icon: "skill-icons:git", level: 4 },
            { name: "GitHub", icon: "skill-icons:github-dark", level: 4 },
            { name: "Arch Linux", icon: "skill-icons:arch-dark", level: 4 },
            { name: "Arduino", icon: "skill-icons:arduino", level: 3 },
            { name: "Raspberry Pi", icon: "skill-icons:raspberrypi-light", level: 3 },
            { name: "Azure", icon: "skill-icons:azure-light", level: 3 },
            { name: "Neovim", icon: "skill-icons:neovim-light", level: 2 },
        ],
    },
    {
        category: "クリエイティブ",
        skills: [
            { name: "After Effects", icon: "skill-icons:aftereffects", level: 4 },
            { name: "Premiere Pro", icon: "skill-icons:premiere", level: 3 },
            { name: "Photoshop", icon: "skill-icons:photoshop", level: 3 },
            { name: "Blender", icon: "skill-icons:blender-dark", level: 3 },
            { name: "Unity", icon: "skill-icons:unity-light", level: 2 },
            { name: "Figma", icon: "skill-icons:figma-light", level: 2 },
        ],
    },
];
---

<section class="skills card">
    <div class="skills-header">
        <h2>My Skills</h2>
        <div class="view-switch">
            <input type="checkbox" id="view-toggle" />
            <div class="labels">
                <label for="view-toggle">
                    <Icon name="ic:baseline-grid-view" />
                </label>
                <label for="view-toggle">
                    <Icon name="ic:baseline-view-list" />
                </label>
            </div>
        </div>
    </div>

    <input type="checkbox" id="expand-skills" class="expand-toggle" />
    <div class="skills-content-wrapper">
        <div class="skills-container">
            {
                skillGroups.map((group) => (
                    <>
                        <h3>{group.category}</h3>
                        <div class="skill-list">
                            {group.skills.map((skill) => (
                                <div class="item" title={skill.name}>
                                    <Icon name={skill.icon} />
                                    <p>{"★".repeat(skill.level) + "☆".repeat(5 - skill.level)}</p>
                                    <span>{skill.name}</span>
                                </div>
                            ))}
                        </div>
                    </>
                ))
            }
        </div>
        <label for="expand-skills" class="expand-label more">もっと見る</label>
        <label for="expand-skills" class="expand-label less">閉じる</label>
    </div>
</section>
<style>
    .expand-toggle {
        display: none;
        &:checked + .skills-content-wrapper {
            max-height: fit-content;

            &::after {
                opacity: 0;
            }

            .more {
                opacity: 0;
                pointer-events: none;
            }
            .less {
                opacity: 1;
            }
        }
    }

    .skills-content-wrapper {
        position: relative;
        max-height: 400px;
        overflow: hidden;
        transition: max-height 0.5s ease-in-out;

        &::after {
            content: "";
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            height: 100px;
            background: linear-gradient(to top, #ffffffee, transparent);
            pointer-events: none;
            transition: opacity 0.5s;
        }
    }

    .expand-label {
        display: block;
        position: absolute;
        bottom: 1rem;
        left: 50%;
        transform: translateX(-50%);
        background-color: rgba(128, 128, 128, 0.2);
        backdrop-filter: blur(4px);
        padding: 0.5rem 2rem;
        border-radius: 100vmax;
        cursor: pointer;
        z-index: 1;
        transition:
            font-size 0.3s,
            scale 0.3s,
            opacity 0.5s;
        overflow: hidden;

        &::before {
            content: "";
            display: block;
            width: 3rem;
            height: 300%;
            top: 50%;
            position: absolute;
            background: linear-gradient(
                to right,
                rgba(255, 255, 255, 0) 0%,
                rgba(255, 255, 255, 0.3) 50%,
                rgba(255, 255, 255, 0) 100%
            );
            transform: translate(-200%, -50%) rotate(-45deg);
            transition: transform 0.5s ease-in-out;
        }

        &.more {
            opacity: 1;
        }

        &.less {
            opacity: 0;
            position: static;
            margin-inline: auto;
            margin-bottom: 0.5rem;
            width: fit-content;
            transform: none;
        }

        &:hover {
            &::before {
                transform: translate(500%, -50%) rotate(-45deg);
            }
            &.more {
                font-size: 1.05rem;
            }
            &.less {
                scale: 1.05;
            }
        }
    }

    .skills-container h3 {
        margin-top: 1rem;

        &:first-of-type {
            margin-top: 0;
        }
    }
    .skills-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        .view-switch {
            position: relative;
            input {
                display: none;
            }
            .labels {
                display: flex;
                align-items: center;
                border-radius: 4px;
                background-color: rgba(0, 0, 0, 0.1);
                overflow: hidden;
                label {
                    display: flex;
                    align-items: center;
                    cursor: pointer;
                    padding: 0.3rem;
                    transition: background-color 0.5s;
                    [data-icon] {
                        font-size: 1.1rem;
                        color: #666;
                    }
                }
            }
            input:checked + .labels label {
                &:first-of-type {
                    background-color: transparent;
                }
                &:last-of-type {
                    background-color: rgba(0, 0, 0, 0.1);
                    pointer-events: none;
                }
            }
            input:not(:checked) + .labels label {
                &:first-of-type {
                    background-color: rgba(0, 0, 0, 0.1);
                    pointer-events: none;
                }
                &:last-of-type {
                    background-color: transparent;
                }
            }
        }
    }
    .skill-list {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
        gap: 0.5rem;
        margin-top: 0.5rem;
        .item {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 0.5rem;
            padding: 1rem;
            border-radius: 8px;
            transition:
                transform 0.3s ease,
                box-shadow 0.3s ease;
            position: relative;
            container-type: inline-size;
            &:hover {
                transform: translateY(-5px);
                box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            }
            [data-icon] {
                font-size: 3rem;
                filter: drop-shadow(0 2px 2px rgba(0, 0, 0, 0.1));
            }
            p {
                font-size: 1.2rem;
                color: #e0b807;
                margin: 0;
                user-select: none;

                @container (width < 80px) {
                    font-size: 1rem;
                }
            }
            span {
                position: absolute;
                bottom: calc(100% - 5px);
                left: 50%;
                transform: translateX(-50%);
                background: #222;
                color: #fff;
                padding: 0.4rem 0.8rem;
                border-radius: 4px;
                font-size: 0.85rem;
                white-space: nowrap;
                z-index: 10;
                opacity: 0;
                visibility: hidden;
                transition:
                    opacity 0.3s ease,
                    transform 0.3s ease;
                &:before {
                    content: "";
                    --triangle-size: 5px;
                    position: absolute;
                    top: 100%;
                    left: 50%;
                    margin-left: calc(var(--triangle-size) * -1);
                    border: var(--triangle-size) solid transparent;
                    border-top: var(--triangle-size) solid #222;
                }
            }
            &:hover span {
                opacity: 1;
                visibility: visible;
                transform: translateX(-50%) translateY(-5px);
            }
        }
    }

    .skills:has(#view-toggle:checked) {
        .skill-list {
            display: flex;
            flex-direction: column;
            grid-template-columns: none;
        }
        .item {
            flex-direction: row;
            justify-content: flex-start;
            align-items: center;
            padding: 0.5rem 1rem;
            gap: 1rem;
            &:hover {
                transform: none;
                box-shadow: none;
            }
            [data-icon] {
                font-size: 2rem;
            }
            p {
                order: 2;
                margin-left: auto;
                font-size: 1rem;
            }
            span {
                position: static;
                transform: none;
                background: none;
                color: inherit;
                padding: 0;
                border-radius: 0;
                font-size: 1rem;
                white-space: normal;
                opacity: 1;
                visibility: visible;
                transition: none;
                order: 1;
                &:before {
                    display: none;
                }
            }
            &:hover span {
                transform: none;
            }
        }
    }
</style>
