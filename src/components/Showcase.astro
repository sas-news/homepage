---
import { getImage } from "astro:assets";
import Background from "@img/background.png";
import Pong from "@img/showcase/DiscordPong.png";
import SSSS from "@img/showcase/super-sns-simulator.png";
import atArt from "@img/showcase/at-art.png";

const showcasesRaw = [
    {
        name: "SAS新聞 Official Website",
        description: "このウェブサイト。",
        imageUrl: Background,
        link: "https://github.com/sas-news/homepage",
        tags: ["Astro", "TypeScript"],
    },
    {
        name: "Discord Pong",
        description: "Discord上で動作するシンプルなPongゲーム。Discord Embedded App SDKを使用。",
        imageUrl: Pong,
        link: "https://github.com/sas-news/Discord-Pong",
        tags: ["React", "JavaScript", "WebSocket", "Three.js"],
    },
    {
        name: "Super SNS Simulator",
        description: "多言語間のコミュニケーションをスムーズにする究極のSNSのモックアップ。",
        imageUrl: SSSS,
        tags: ["React", "TypeScript"],
    },
    {
        name: "atArt",
        description:
            "絵画鑑賞をより楽しくするためのアプリ。座標を指定したコメント機能を備えています。",
        imageUrl: atArt,
        link: "https://github.com/EK-FLL/shin_at-art",
        tags: ["Next.js", "TypeScript", "Material UI", "Firebase"],
    },
];

const showcases = await Promise.all(
    showcasesRaw.map(async (item) => {
        const highRes = await getImage({
            src: item.imageUrl,
            width: 640,
            height: 360,
            format: "webp",
        });
        const lowRes = await getImage({
            src: item.imageUrl,
            width: 320,
            height: 180,
            format: "webp",
        });
        return {
            ...item,
            highRes,
            lowRes,
        };
    })
);
---

<div class="showcase card">
    <h2>Showcase</h2>
    <div class="showcase-grid">
        {
            showcases.map((item) => {
                const Tag = item.link ? "a" : "span";
                const attributes = {
                    ...(item.link
                        ? { href: item.link, target: "_blank", rel: "noopener noreferrer" }
                        : {}),
                };

                return (
                    <Tag class:list={["showcase-item", { "no-link": !item.link }]} {...attributes}>
                        <picture>
                            <source media="(450px <= width <= 610px)" srcset={item.highRes.src} />
                            <img
                                class="image"
                                src={item.lowRes.src}
                                alt={item.name}
                                width="320"
                                height="180"
                                style={`aspect-ratio: 16 / 9;`}
                                decoding="async"
                                fetchpriority="auto"
                                loading="lazy"
                            />
                        </picture>
                        <h3>{item.name}</h3>
                        <p>{item.description}</p>
                        <div class="tags">
                            {item.tags.map((tag) => (
                                <span class="tag">{tag}</span>
                            ))}
                        </div>
                    </Tag>
                );
            })
        }
    </div>
</div>

<style>
    .showcase-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 1rem;
    }
    .showcase-item {
        border: 1px solid #ddd;
        padding: 1rem;
        border-radius: 8px;
        text-decoration: none;
        color: inherit;
        transition:
            transform 0.2s,
            box-shadow 0.2s;
        display: flex;
        flex-direction: column;
        &:hover {
            transform: translateY(-5px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            h3 {
                text-decoration: underline;
            }
        }
        &.no-link {
            pointer-events: none;
            cursor: default;
            &:hover {
                transform: none;
                box-shadow: none;
            }
        }
        .image {
            width: 100%;
            height: auto;
            aspect-ratio: 16 / 9;
            object-fit: cover;
            border-radius: 6px;
            margin-bottom: 1rem;
            border: 2px solid #eee;
        }

        p {
            margin-top: 0.5rem;
            flex-grow: 1;
        }
    }
    .tags {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
        margin-top: 1rem;
    }
    .tag {
        --tag-color: #1256af;
        padding: 0.25rem 0.5rem;
        color: var(--tag-color);
        border: 1px solid var(--tag-color);
        border-radius: 100vmax;
        font-size: 0.8rem;
    }

    @media (width < 350px) {
        .showcase-grid {
            grid-template-columns: 1fr;
        }
        .showcase-item {
            padding: 0.5rem;
            .image {
                aspect-ratio: auto;
                height: 120px;
            }
            .tags {
                gap: 0.25rem;
                margin-top: 0.5rem;
            }
            .tag {
                font-size: min(0.7rem, 5vw);
                padding: 0.2rem 0.4rem;
            }
        }
    }
    @media (prefers-color-scheme: dark) {
        .showcase-item {
            border-color: #333;
            .image {
                border-color: #555;
            }
        }
        .tag {
            --tag-color: #9feaf9;
        }
    }
</style>
